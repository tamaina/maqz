//- pug mixins 文字列で読み込まれてルートで処理することもあるのでよろしくおねがいします

mixin fa( $icon, $prefix, $option )
  -
    const style = $prefix || "fas"
    const option = $option || {}
    const query = { prefix: style, iconName: $icon }
    let fahtml = ''
    const insertlater = falibs.icons.find((el) => el.prefix == style && el.iconName == $icon)
  if(insertlater && !isAmp)
    i(class=`fa ${style} ${$icon}` data-fa-prefix=style data-fa-icon-name=$icon data-fa-option=(JSON.stringify(option).replace(/\"/g,"'")))
  else
    -
      try {
        fahtml = fontawesome.icon(query, option).html[0]
      } catch(e2) {
        console.log(`Can't pick up icon: ${$icon}, ${style}`) 
      }
    !=fahtml

mixin fa_fw( $icon, $prefix )
  +fa( $icon, $prefix, {classes: ['fa-fw']})

mixin toc(headings, n, tag, cl)
  -
    function lv(a, b, ht){
      let r = a - b
      let ans = ''
      for(let j=0; r > j; j++){
        ans += ht
      }
      return ans
    }
    let o = `<${tag} class="${cl} m-0 p-0">`
    for(let i = 0; headings.length > i; i++){
      let now = headings[i], prev
      if (now.number < n) continue

      if (i == 0) prev = {number: n}
      else prev = headings[i - 1]

      if ( i == 0 || now.number > prev.number ) {
        o += lv(now.number, prev.number, `<li><${tag} class="${cl}">`)
      } else if ( now.number < prev.number ) {
        o += lv(prev.number, now.number, `</${tag}></li>`)
      }
      o += `<li><a href="#${now.id}">${now.text}</a></li>`
    }
    o += `</${tag}>`
  != o

mixin lis_of_dir(pathf, $option)
  -
    function pathME(e, pathf){
      if (!(e.meta.permalink.startsWith(pathf) && !e.meta.isMetaPage)) return false
      
      const a = e.meta.permalink.split('/').length
      const b = pathf.split('/').length
      if ($option.self) {
        return a == b || a == b + 1
      } else {
        return a == b + 1
      }
    }
    function pathMFilter(pathf){
      return pages.filter(function(e,i,a){
        if (typeof pathf === "string") {
          return pathME(e, pathf)
        } else if (typeof pathf === "object" && Array.isArray(pathf) ){
          for (const c of pathf) {
            if (pathME(e, c)) return true
          }
        }
      })
    }
    let bpages = pathMFilter(pathf)
    bpages.sort( (a, b) => { return ( a.meta.permalink > b.meta.permalink ) ? 1 : -1 } )
    bpages.sort( (a, b) => a.attributes.rank - b.attributes.rank )
  each rpage in bpages
    li
      a.d-block(href=`${site.url.path}${rpage.meta.permalink}` class=(page.meta.permalink.startsWith(rpage.meta.permalink) ? 'font-weight-bold' : ''))
        div=rpage.attributes.title
        if($option.description)
          div.small.lh-12=rpage.attributes.description
      if($option.s == true && rpage.attributes.has_child == true)
        ul.mt-1(clas=`${$option.unstyled ? 'list-unstyled' : ''}`)
          +lis_of_dir(rpage.meta.permalink, {unstyled: $option.unstyled, self: $option.self, s: true, description: $option.description})

mixin embed_video(url)
  .embed-responsive.embed-responsive-16by9.video-embed
    iframe(src=url,allowfullscreen="allowfullscreen",frameborder="0",gesture="media",allow="encrypted-media").embed-responsive-item
mixin embed_nicovideo(vid)
  +embed_video(`https://embed.nicovideo.jp/watch/${vid}`)
mixin embed_youtube(vid)
  +embed_video(`https://www.youtube.com/embed/${vid}?controls=2&modestbranding=1&rel=0`)
mixin embed_youtube_autoplay(vid)
  +embed_video(`https://www.youtube.com/embed/${vid}?autoplay=1&controls=2&modestbranding=1&rel=0`)

//- https://developers.google.com/youtube/player_parameters?hl=ja

mixin blog_badges(targetpage)
  div.mr-2
    +fa_fw("folder-open")
    if(targetpage.attributes.categories)
      each category in targetpage.attributes.categories
        span.badge.badge-success.md-small= category
        |  
    else
      | なし
  div.mr-2
    +fa_fw("tags")
    if(targetpage.attributes.tags)
      each tag in targetpage.attributes.tags
        span.badge.badge-secondary.md-small= tag
        |  
    else
      | なし
